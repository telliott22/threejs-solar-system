// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
	@if $self {
		&,
		&:hover,
		&:active,
		&:focus {
			@content;
		}
	} @else {
		&:hover,
		&:active,
		&:focus {
			@content;
		}
	}
}


/// Clearfix
@mixin clearfix {
		&:before, &:after {
				content: "";
				display: table;
		}
		&:after {
				clear: both;
		}
}





/// Convert px size to rem
/// @author Rhys Williams
/// @param {String} $size - size in pixels (include px)
@mixin fontSize($size) {
	font-size: $size; //Fallback in px
	font-size: rem($size);
}


/**
 * Mixin for CSS3 Flexbox
 *
 * @param flex-direction
 * @param justify-content
 * @param (bool) inline
 */

@mixin flexbox($direction: row, $justify: center, $align: center, $inline: false, $wrap: wrap) {

	@if($inline) {
		display: inline-flex;
	}
	@else {
		display: flex;
	}

	flex-wrap: $wrap;
	flex-direction: $direction;
	justify-content: $justify;
	align-items: $align;
}

@mixin aspect-ratio($width, $height) {
	position: relative;

	&:before {
		display: block;
		content: "";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}

	> .ar-content {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
}

@mixin absolute-fill() {
	position: absolute;
	top: 0;
	bottom: 0;
	right: 0;
	left: 0;
}

/*
  This mixin can be used to set the object-fit:
  @include object-fit(contain);
  or object-fit and object-position:
  @include object-fit(cover, top);
*/
@mixin object-fit($fit: fill, $position: null){
	-o-object-fit: $fit;
	   object-fit: $fit;
	@if $position {
		-o-object-position: $position;
		   object-position: $position;
		font-family: 'object-fit: #{$fit}; object-position: #{$position}';
	} @else {
		font-family: 'object-fit: #{$fit}';
	}
}



@mixin centre-content($vertical: true, $horizontal: true) {
	@if $vertical or $horizontal {
		position: absolute;
	}

	@if $vertical {
		top: 50%;
		transform: translateY(-50%);
	}

	@if $horizontal {
		left: 50%;
		transform: translateX(-50%);
	}

	@if $vertical and $horizontal {
		transform: translate(-50%, -50%);
	}

}

@mixin phone-only {
  @media screen and (max-width: $medium - 1px) { @content; }
}
@mixin tablet-up {
  @media screen and (min-width: $medium) { @content; }
}
@mixin big-tablet-up {
  @media screen and (min-width: $large) { @content; }
}
@mixin desktop-up {
  @media screen and (min-width: $xlarge) { @content; }
}
@mixin big-desktop-up {
  @media screen and (min-width: $super) { @content; }
}
